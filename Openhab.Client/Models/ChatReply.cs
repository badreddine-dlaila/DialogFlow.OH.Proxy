// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Openhab.Clinet.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ChatReply
    {
        /// <summary>
        /// Initializes a new instance of the ChatReply class.
        /// </summary>
        public ChatReply()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ChatReply class.
        /// </summary>
        public ChatReply(string language = default(string), string query = default(string), string answer = default(string), string hint = default(string), Intent intent = default(Intent), IList<string> matchedItemNames = default(IList<string>), Card card = default(Card))
        {
            Language = language;
            Query = query;
            Answer = answer;
            Hint = hint;
            Intent = intent;
            MatchedItemNames = matchedItemNames;
            Card = card;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public string Language { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "query")]
        public string Query { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "answer")]
        public string Answer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hint")]
        public string Hint { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "intent")]
        public Intent Intent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "matchedItemNames")]
        public IList<string> MatchedItemNames { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "card")]
        public Card Card { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Card != null)
            {
                Card.Validate();
            }
        }
    }
}
