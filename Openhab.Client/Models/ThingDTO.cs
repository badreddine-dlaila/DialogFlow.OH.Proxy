// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Openhab.Clinet.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ThingDTO
    {
        /// <summary>
        /// Initializes a new instance of the ThingDTO class.
        /// </summary>
        public ThingDTO()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ThingDTO class.
        /// </summary>
        public ThingDTO(string label = default(string), string bridgeUID = default(string), IDictionary<string, object> configuration = default(IDictionary<string, object>), IDictionary<string, string> properties = default(IDictionary<string, string>), string uID = default(string), string thingTypeUID = default(string), IList<ChannelDTO> channels = default(IList<ChannelDTO>), string location = default(string))
        {
            Label = label;
            BridgeUID = bridgeUID;
            Configuration = configuration;
            Properties = properties;
            UID = uID;
            ThingTypeUID = thingTypeUID;
            Channels = channels;
            Location = location;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bridgeUID")]
        public string BridgeUID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "configuration")]
        public IDictionary<string, object> Configuration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UID")]
        public string UID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "thingTypeUID")]
        public string ThingTypeUID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "channels")]
        public IList<ChannelDTO> Channels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

    }
}
