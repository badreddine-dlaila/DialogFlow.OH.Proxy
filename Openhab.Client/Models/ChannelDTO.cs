// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Openhab.Clinet.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ChannelDTO
    {
        /// <summary>
        /// Initializes a new instance of the ChannelDTO class.
        /// </summary>
        public ChannelDTO()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ChannelDTO class.
        /// </summary>
        public ChannelDTO(string uid = default(string), string id = default(string), string channelTypeUID = default(string), string itemType = default(string), string kind = default(string), string label = default(string), string description = default(string), IList<string> defaultTags = default(IList<string>), IDictionary<string, string> properties = default(IDictionary<string, string>), IDictionary<string, object> configuration = default(IDictionary<string, object>))
        {
            Uid = uid;
            Id = id;
            ChannelTypeUID = channelTypeUID;
            ItemType = itemType;
            Kind = kind;
            Label = label;
            Description = description;
            DefaultTags = defaultTags;
            Properties = properties;
            Configuration = configuration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uid")]
        public string Uid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "channelTypeUID")]
        public string ChannelTypeUID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "itemType")]
        public string ItemType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "defaultTags")]
        public IList<string> DefaultTags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "configuration")]
        public IDictionary<string, object> Configuration { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DefaultTags != null)
            {
                if (DefaultTags.Count != System.Linq.Enumerable.Count(System.Linq.Enumerable.Distinct(DefaultTags)))
                {
                    throw new ValidationException(ValidationRules.UniqueItems, "DefaultTags");
                }
            }
        }
    }
}
