// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Openhab.Clinet.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PageDTO
    {
        /// <summary>
        /// Initializes a new instance of the PageDTO class.
        /// </summary>
        public PageDTO()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PageDTO class.
        /// </summary>
        public PageDTO(string id = default(string), string title = default(string), string icon = default(string), string link = default(string), PageDTO parent = default(PageDTO), bool? leaf = default(bool?), bool? timeout = default(bool?), IList<WidgetDTO> widgets = default(IList<WidgetDTO>))
        {
            Id = id;
            Title = title;
            Icon = icon;
            Link = link;
            Parent = parent;
            Leaf = leaf;
            Timeout = timeout;
            Widgets = widgets;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "icon")]
        public string Icon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "link")]
        public string Link { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parent")]
        public PageDTO Parent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "leaf")]
        public bool? Leaf { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeout")]
        public bool? Timeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "widgets")]
        public IList<WidgetDTO> Widgets { get; set; }

    }
}
