// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Openhab.Clinet.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class StateDescription
    {
        /// <summary>
        /// Initializes a new instance of the StateDescription class.
        /// </summary>
        public StateDescription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StateDescription class.
        /// </summary>
        public StateDescription(double? minimum = default(double?), double? maximum = default(double?), double? step = default(double?), string pattern = default(string), bool? readOnlyProperty = default(bool?), IList<StateOption> options = default(IList<StateOption>))
        {
            Minimum = minimum;
            Maximum = maximum;
            Step = step;
            Pattern = pattern;
            ReadOnlyProperty = readOnlyProperty;
            Options = options;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minimum")]
        public double? Minimum { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maximum")]
        public double? Maximum { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "step")]
        public double? Step { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pattern")]
        public string Pattern { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "readOnly")]
        public bool? ReadOnlyProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "options")]
        public IList<StateOption> Options { get; set; }

    }
}
